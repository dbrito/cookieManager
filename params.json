{"name":"Cookiemanager","tagline":"Gerenciamento de cookies...simples e rapido","body":"#CookieManager\r\nClasse que tem como objetivo simplificar o gerenciamento de cookies ou seja criar, editar e excluir cookies ao chamar de uma função.\r\n##Uso:\r\nPrimeiramente se cria uma instancia da classe(```var cm = new CookieManager();```), após isso você já pode utilizar os métodos da classe que são: **set**, **get** e **remove**. Veja o uso da cada um a seguir: \r\n\r\n###set:\r\n```javascript\r\n//recebe como parametros o nome do cookie, o valor do cookie e tempo de vida do mesmo em dias, e sem o cookie deve ser salvo no dominio e não no sub-dominio\r\ncm.set('cookieTeste','valorTeste', 30, true);\r\n```\r\n\r\n###get:\r\n```javascript\r\n//recebe como parametro apenas o string com o nome do cookie desejado\r\ncm.get('cookieTeste');\r\n//retornara o string do cookie EX: 'g=HUEBR expires=Thu, 01 Jan 2015 00:00:00 UTC' ou false caso o cookie não exista.\r\n```\r\n\r\n###remove:\r\n```javascript\r\n//recebe como parametro apenas o string com o nome do cookie a ser excluido\r\ncm.remove('cookieTeste');\r\n//retornara o valor booleano... true caso o cookie tenha sido excluido e false caso o cookie por algum motivo não tenha sido excluido \r\n```\r\n\r\n\r\n** *Importante:**\r\no usuario deve estar ciente que os cookies estão atrelados aos sub-dominios ou dominios e assim entender as limitações da classe ou seja só se pode gerenciar os cookies do dominio da aplicação.\r\n\r\n[por Douglas Santos](http://douglas.com.br)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}